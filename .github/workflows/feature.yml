name: Feature CI/CD

on:
  push:
    branches-ignore:
      - 'main'

  workflow_dispatch:

jobs:

  test:
    name: Test - Units & Integrations
    runs-on: ubuntu-20.04
    services:
      postgres_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: kt-sejnipwd
          POSTGRES_DB: kt-sejni
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build with Gradle
        run: ./gradlew build

  sonar:
    name: Test - SonarCloud Scan
    runs-on: ubuntu-20.04
    services:
      postgres_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: kt-sejnipwd
          POSTGRES_DB: kt-sejni
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: SonarCloud Scan
        run: ./gradlew jacocoTestReport
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./build/jacocoReport/test/
          name: codecov-sejni
          fail_ci_if_error: true